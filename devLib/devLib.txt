devLib.txt 0.0.4                    UTF-8                      dh:2025-10-30
*---|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

    <https://github.com/orcmid/nfoTools/blob/master/devLib/devLib.txt>

          DEVLIB ALGORITHMS, UTILITIES AND TOOLS LIBRARY DEVELOPMENT
          ==========================================================

    A library of reusable algorithms, utilities, and any other tools are
    organized under this portion of the nfoTools repository.

    This is where code is developed and tested.  The resulting library
    components are packaged for distribution, with downloading, installation,
    and usage instructions typically under docs/tools/.

    The approach for organization of dev/ subfolders and release packaging
    is based on that worked out for the VCrayApp WinDev devKit.

    The main thrust is development on and for the Microsoft Windows platform.
    Other platforms and construction cases will be entertained. The primary
    effort for Windows is addressed to the largest international community
    of users and (potential) developers.  This is for practical purposes as
    well as a means of exploiting and demonstrating a library of rich support
    for software-development students and practioners.

MANIFEST

    devLib.txt
        This description file on organization of the archive and use of its
        materials.

    DEK/
       Individual devLib programs based on contributions by Donald E. Knuth,
       including in volumes of The Art of Computer Programming as well as
       many other sources.

    DieHard/
       Materials on the original Diehard random-number test generators and
       scoring by George Marsaglia in the 1990s.  Some of the facilities are
       developed for usage under nfoTools.

    DieHarder/
       Materials on the Diehard/Dieharder libraries of tests for random number
       generators developed by Robert G. Brown (RGB), inspired by the included
       Diehard battery of tests developed by George Marsaglia.  There is
       reference usage but adaptations are not anticipated.

    GSL/
       For forks of the Gnu Scientific Library.  GSL material is not included
       in the nfoTools GitHub repository.  It is available for reference into
       DieHarder dependencies on it.  nfoTools contributions will not rely on
       it.

    nfoCPUID/
       Project to develop tools for determining the feature set of a computer
       for confirmation of specific processor advanced features and adapting
       to them or their absence.



*---|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

                      Copyright 2025 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

*---|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

 ATTRIBUTION

   Hamilton, Dennis E. DevLib Algorithms, Utilities and Tools Library
   Development.  nfoTools file devLib.txt version 0.0.4 dated 2025-10-30,
   available on the Internet as a version of
   <https://github.com/orcmid/nfoTools/blob/master/devKits/devKits.txt>

NOTES AND TODO

  * Complete the initial structure down through the nfoFlip project.

  * Port SGB GB_SORT for an efficient sorting routine

  * Port SGB GB_IO for reading graph description *.dat files

  * Port SGB GB_GRAPH for the common subroutines and data structurs that
    support the conventions of the Stanford GraphBase (SGB).

  * Develop Hashing Functions that support the Miser Project implementation
    of ob-cell HashFlag design.  This will involve ways to test the hashing
    procedures for reliable behavior, with no degradation and minimal
    collisions.  I am looking for whatever help I can find in SGB and in
    The Art of Computer Programming (TAoCP).

  * Arrange a test of nfoFlip with the DieHard/DieHarder tests that are
    relevant to nfoFlip, focusing on the Birthdate and Birthdate1 tests
    that nfoFlip fails if not adjusted for.


*---|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

 0.0.4 2025-10-30T22:40Z Bring current with DieHard, GSL, and nfoCPUID
 0.0.3 2025-10-17T22:24Z Add DieHarder/
 0.0.2 2025-10-13T23:45Z Replace /Knuth with /DEK in the manifest
 0.0.1 2025-10-11T22:07Z Use nfoTools/devKits/devKits.txt as boilerplate
       edited for devLib.txt.

                         *** end of devLib.txt ***
