VCrayApp.txt 0.0.9                  UTF-8                         2023-01-15
----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

                      RAYLIB APP DEVELOPMENT PROJECT
                      ==============================

<https://github.com/orcmid/nfoTools/blob/master/devKits/WinDev/VCrayApp/VCrayApp.txt>

                 DEVELOPING THE VCRAYAPP CONSTRUCTION KIT
                 ----------------------------------------

    VCrayApp is a construction set for building raylib applications on Windows
    using Microsoft C/C++ tools and producing Microsoft Windows graphical
    software, especially games.

    VCrayApp is delivered in a .zip file that can be extracted, customized,
    and used. Pre-customized VCrayApp kits can also be enclosed in the body
    of raylib-using software projects and delivered in the repositories of
    those projects.

    dev\ and its content mimics the recommended installation of a VCrayApp
    extraction, with raylib installed as a peer folder.  The VCrayApp
    organization and VCrayApp.bat script depend on such relative proximity.

    VCrayApp releases are subject to semantic versioning.  The three-numeral
    *semver* starts with 0.0.0 for the initial alpha release and progresses
    from that value, basically major.minor.patch levels.

    VCrayApp is a cousin of the VCbuild construction kit, and modeled on
    that.  It also borrows from the raylib\projects\scripts\build-windows.bat
    script and relies on a comparable structure with cache\ and \app folders.
    The verification of VCrayApp-*semver* is by usage in confirming all of the
    raylib\templates\ and raylib\examples.  This is accomplished in the GitHub
    orcmid/rayLab project using the same raylib releases as used in the
    raylib\ folder here.

MANIFEST

    VCrayApp.txt
        This manifest and job jar for the VCrayApp construction-kit
        development project

    .gitignore
        Keeping raylib\ and VCrayapp\ here out of the winDev\VCrayApp
        repository

    VCrayApp-checklist.txt
        Checklist of activities in the development and staging of a VCrayApp
        release.

    dev\
        Developer foder for the VCrayApp materials under current development.
        A version of VCrayApp structure before packaging in a release Zip.
        This is always work-in-progress.  This code is not intended for use
        by other than developers contributing to VCrayApp itself.

    raylib-3.7.0.zip
        The raylib 3.7.0 release zip used in original confirmation of
        VCrayApp-0.0.0 at this time.

    raylib-4.0.0.zip
        The raylib 4.0.0 release zip used for confirming VCrayApp operation
        with the latest raylib version that works with Microsoft VC/C++.
        (See VCrayApp-0.0.0.txt for particulars)

    raylib\
        The Zipped raylib-x.x.0\ folder extracted to here and renamed
        raylib\ for consistent reference from a VCrayApp-organized project
        (excluded from Git, extracted from the raylib release .zip under test.
        This is at the same level as dev\ and any VCrayApp\ opened here for
        confirmation of a VCrayApp-*semver*.zip release candidate.

    VCrayApp\
        Produced by unzipping VCrayApp-*semver*.zip here and renaming it to
        VCrayApp.  This folder is also excluded from Git.  It is created for
        confirmation of any VCrayApp release candidate and located at the
        same level as raylib\ for that purpose.

    VCrayApp-0.0.0 Release candidate
        The following comprise the release candidate for VCrayApp-0.0.0.  The
        confimred candidate will be preserved and distributed via
        <https://orcmid.githug.io/nfoTools/dev/D211101/> .  General practice
        is to download all four of the files into the same folder.

    VCrayApp-0.0.0.txt
        Synopsis, summaries, and manifest for the VCrayApp-0.0.0 alpha
        release candidate.  The file is clear-signed and the same as the one
        included in VCrayApp-0.0.0.zip.  Download and review of this file
        is useful before deciding to download the additional files.

    VCrayApp-0.0.0.zip
        Package of the VCrayApp-0.0.0 release candidate with contents as
        described by VCrayApp-0.0.0.txt (and also included therein).

    VCrayApp-0.0.0.zip.asc
        Detached digital signature of VCrayApp-0.0.0.zip.  Verification of
        this signature confirms the source and the integrity of the .zip.

    VCrayApp-0.0.0.zip.sha256
        SHA 256 cryptographic hash of file VCrayApp-0.0.0.zip.  Verification
        of *this* hash value is evidence that the downloaded .zip (or .sha256)
        have not been altered in the downloading/redistribution and usage.

----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

                     Copyright 2021-2022 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

 ATTRIBUTION

   Hamilton, Dennis E. Raylib App Construction-Kit Project. nfoTools Project
   text file VCrayApp.txt 0.0.9 dated 2023-01-15, available on the Internet
   as a version of
   <https://github.com/orcmid/nfoTools/blob/master/devKits/WinDev/VCrayApp/VCrayApp.txt>

TODO

 * Derive a VCrayApp-0.0.0.zip and employ it in orcmid/RayLab to confirm the
   templates and examples.

 * This project was started using raylib-3.7.0 for the testing.  It is now
   important to distribute in a form that works with raylib-4.0.0 for
   newbies.

 * IMPORTANT NOTE: raylib-4.2.0 uses a version of external/miniaudio.h that
   WILL NOT COMPILE WITH VC/C++.  Until that is remedied in miniaudio.h and
   a subsequent release of raylib-4.x, raylib source cannot be used for
   VCrayApp-constructed raylib applications.

 * In general, the use of an in-progress raylib version is not covered
   for building applications that depend on raylib.  That does not
   mean feedback and fixes cannot be submitted to the project.  But there
   needs to be separation and avoidance of too much dependency on work-in-
   progress and the prospect of deprecations, alterations, and regressions.
   This does mean that careful work-arounds are required when there is any
   difficulty with a stable release. And one should not depend on new/changed
   features until they appear in a stable release, and a release schedule
   should never depend on a dependency achieving release. There are enough
   hazards that are under ones own control.

 * I intend to make VCrayApp-0.0.0 available as an alpha release, inviting
   exploration and employment by interested users of raylib.  This means I
   need to update the text files and also have something on docs/dev for the
   alpha release.

 * The beta release, VCrayApp-0.1.0 should also address the replacement of
   one release by another and all the support there is for such changes.
   Saving ones customizations, having the customizations already on the users
   source control, etc.  This should be feature complete and post-beta changes
   should not have breaking changes, though bug fixes are always a prospect.

 * These aspects of trustworthy production need to be accounted for.  There
   should also be some integration with respect to confirmable experience.

 * Create docs/dev/ folio(s) on VCrayApp and link from VCrayApp-0.0.0 content.

 * In VCrayApp.bat, have places for error messages to link to that provide
   more information on resolving a particular failure.

 * Resolve use of docs/dev connections back and forth on raylib at docs/tools.

 * Do alpha/beta availability and distribution once there is a docs/dev folder
   for downloading, usage information, and gathering feedback.

 * Use project structure for developing/working the checklist.

 * It is not possible to provide VCrayApp as the basis for learning C/C++
   programming.  This must be emphasized in some manner.  We do want on-ramps
   and guard rails, but the basics of C Language programming need to be
   developed elsewhere.  There is also quite a bit to understand about the
   thread on which the app runs and how the cycle works with regard to the
   presentation and interaction with the display and input devices.

 * Fold the VCrayApp model back to an update of VCbuild that uses a similar
   structure for for src, cache, and app in generic construction projects of
   single executables.

 * There needs to be a structure, maybe beside dev/ for testing against the
   raylib/examples in some sort of easy to verify and run form.  This will
   need a good script that runs VCrayApp.bat to accomplish all of its work.
   I need to figure out a folder structure.  There is already a raylib\ here,
   with dev\ alongside.  I have a small problem because dev\ does not lock
   down.  I should have thought of that.  With test\ or verify\ alongside
   raylib\, I am puzzled about what the structure is and how to switch among
   raylib sources and also VCrayApp versions.  I need to ponder this.

 * I have the idea of a .bat file that has labels for the raylib example
   groups and also the the within-group places.  There needs to be a way to
   jump in at any one of these and test or to test and continue.  There may
   also be some parameters that get passed to VCrayApp for certain operations.
   There needs to be good ways to pop out of a run as well.

 * So, should verify\ *be* a VCrayApp project that I copy the additional
   script, verify.bat into, and then run from there?  that might be easy in
   terms of using the existing structure at the same level as VCrayApp.bat.
   So I want to create it in that form.

 * Now the promise of VCrayApp that
   it can be unzipped over the same location and not touch anything that is
   not part of VCrayApp directly should work.  So this should not be in dev\
   because it doesn't ship with VCrayApp.

 * There is a question about managing
   and making verification available, so I have to think about that.  Then
   there needs to be a bit more scaffolding.  Mmm, yes, but the same applies.
   I could make VCrayVerify and that should work just fine.  Still noodling.
   This is a great idea because it provides a structure for reverifying the
   examples when raylib\examples change and also when there is a new releases
   of Visual Studio Build Tools.  We have both of those to contend with and
   the ability to rerun everything relatively quickly matters.

 * The technique in VCbind for choosing a start configuration should work for
   VCrayVerify.  Then a technique for doing only one instead of running the
   table should also work.  Because there are 9 groups of raylib\example
   folders, it is probably good to have some sort of granularity in which
   examples are verified, including how many. Might want some sort of wild-
   card scheme, and must deal with * being use in VCbind and VCrayApp for
   other purposes.  Need this to be simple.

 * It looks like VCrayVerify should be a peer project or a subproject of
   VCrayApp.  I don't like the deeper nesting.  And this is as much about
   raylib (or more) than it being an application of VCrayApp.  Wherever I
   create this, I should move some of these work items and considerations
   there.

----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

 0.0.9 2023-01-15T06:02Z Pondering how to create a verification fixture that
       works through raylib\example folders in some deliberate way.
 0.0.8 2023-01-08T21:06Z Reflect VCrayApp-0.0.0 release candidacy and manage
       TODOs.
 0.0.7 2022-12-21T19:26Z Manifest correction, manage TODOs
 0.0.6 2022-10-20T20:46Z Add raylib-4.0.0.zip and account for limitations
       because of an external/miniaudio.h that fails to compile with VC/C++.
 0.0.5 2022-07-13T15:41Z TODOs on NOTICE.txt and C/C++ programming not taught.
 0.0.4 2022-07-09T16:23Z Manage TODOs, introduce VCrayApp-release.txt
 0.0.3 2022-06-30T22:19Z TODO on checklist requirements
 0.0.2 2022-05-29T21:52Z Refine and manage TODOs
 0.0.1 2021-11-15T00:52Z Upgrading toward production achievement.
 0.0.0 2021-11-13T00:15Z Initial placeholder


                        ***** end of VCrayApp.txt *****
