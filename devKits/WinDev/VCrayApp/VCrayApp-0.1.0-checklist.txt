VCrayApp-0.1.0-checklist.txt 0.0.*   TF-8                         2023-03-26
*---|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

                      RAYLIB APP DEVELOPMENT PROJECT
                      ==============================

<https://github.com/orcmid/nfoTools/blob/master/devKits/WinDev/VCrayApp/VCrayApp-0.1.0-checklist.txt>

                        VCRAYAPP 0.1.0 Checklist
                        ------------------------

This is VCrayApp-checklist.txt used to work through the changes to make the
release of VCrayApp-0.1.0 (beta).  It will be chewed up as we go.  There is
no careful release control of this file, which should essentially disappear
as the checklist is worked.  This file will be deleted when it is all
accomplished.

Changes and improvements will be reflected in the main VCrayApp-checklist.txt.

    *  IN-PROGRESS: Create Project for the 0.1.0 beta release and create
       tasks/issues for these activities as we go.  The overall project is
       #42

    * .vscode\
        o Verify correct operation in conjunction with VS 2022 Build Tools
          and raylib 3.7.0-4.5.0 and 4.6.0-dev source-code installation.
        o Clear/armor sign the .vscode.txt file.

    * src\src.txt
        o Update to version of VCrayApp
        o Indicate value of using src\
        o Provide more links to usage as part of VCrayApp and the benefits
          of using with Developer Command Prompts and VS Code.
        o Provide orcmid.github.io/nfoTools location for the attribution

    * app\app.txt
        o Update to version of VCrayApp
        o Indicate purpose of app\
        o Explain Xcopy/Zip deployment
        o Explain setting up for command-line/shortcut execution
        o Link to additional information on Zip deployment
        o Link to additional information on MSIX deployment
        o Address single-use versus multiple-use installation
        o Provide orcmid.github.io/nfoTools location for the attribution

    * cache\
        o Update cache.txt to version of VCrayApp
        o Indicate purpose of cache\
        o Link to information on the compilation option files
        o Link to explanation of the compilation steps
        o Provide orcmid.github.io/nfoTools location for the attribution
        o Ensure that the cache components work with the version of raylib
          being used

    * cache\rayConfirm.c
        o Adjust version-specific information
        o Adjust VCrayApp package identification

    * VCrayApp.bat
        o Set the semantic version variable, VCrayApp
        o Provide the <place-to-be-announced> as the location for VCrayApp
          dev location
        o Provide the <related-place-to-be-announced> as the location for
          the latest VCrayApp download, etc.
        o Determine PAUSE default for non-"+" compiles on success
        o For FAIL6 provide a better indication of the location of raylib/src
        o For FAIL6 provide a link to the requirement to check and also
          consider the case where the location of raylib has been changed
        o For FAIL5 provide information on how to check for compilation
          errors and determine the nature of the failure
        o For FAIL5 find a way to provoke this case to demonstrate it
        o For FAIL4 do similar things - collect typical errors such as
          misspellings and incompatibility with a raylib version
        o For FAIL3 provide a link to <some nfoTools support information>
          specifically on being under a developer Command Prompt session.
        o For FAIL1 provide <other nfoTools support information. on the
          correct unpacking and preservation of VCrayApp in a folder.

    * VCrayApp-semver.txt
        o Ensure place-holder under D211101x subfolder.

    * Include CHECKLIST.txt and keep it current as development of a new
      release is underway.  It will be included in the VCrayApp zip and be
      downloadable separately via D211101.

    * Ensure rational operation when VCrayApp is embedded in a project and
      hosted in a script of that project.  This is done with VCrayVerify but
      other cases might be needed.

    * Maintain and include CHANGES.txt.

    * Clearsign *all* of the text files in the deliverable (even NOTICE.txt?).

DEPLOYMENT

    * Use the VCBind model
    * For the manifest, do gpg --clear-sign --armor VCrayApp-*semver*.txt
      To produce VCrayApp-*semver*.txt.asc.  Get this to correctly describe
      itself as the *.txt file.  Then delete the *.txt file and rename the
      *.txt.asc file to *.txt.  This should be checked in.
    * Make the VCrayApp-*semver*.zip of everything but the dev.txt file.
      Copy the two VCrayApp-*semver* files to the VCrayApp level.  Delete
      the *.zip in the dev/ folder.
    * Create the gpg --detach-sign --armor VCrayApp-*semver*.zip and that
      will make VCrayApp-*semver*.zip.asc as the detached signature.
    *** TODO: The download for this needs to describe how to check the
      verify the signature, the clearsigned VCrayApp-*semver*.txt.
    * Create the SHA256 Hash of the VCrayApp-*semver*.zip for usage also.
      This can be done running certUtil -hashfile (file) SHA256 >(file).SHA256
    * Explore use of winget hash for making SHA256 hashes and see if that
      works as well.  This might be a better alternative for command-line
      operation on current Windows 10/11.

    * The signature check works with gpg --verify naming either the .txt
      version or the .asc detached signature.

    * The hash can be checked by comparison, which is not much fun.  There
      seems to be no check utility and that's just too bad.  THIS SHOULD BE
      AN NFOTOOLS PROJECT.  It seems that Winget hash works a little better.
      I could probably do a hash to a file and then do a file compare.  That
      might be a lot better.

    * Ensure that GIT and the site treat .asc and .sha256 as text/plain. That
      is the default.  We need to figure out if clear-sign armor files check
      properly whichever way line ends are encoded: CR/LF or just one or the
      other.  XXX: THIS MAY BE A FRAGILE DEAL.


*---|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

                   Copyright 2022-2023 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

*---|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*


TODO

 * The beta release, VCrayApp-0.1.0 should address the replacement of
   one release by another and all the support there is for such changes.
   Saving ones customizations, having the customizations already on the users
   source control, etc.  This should be feature complete and post-beta changes
   should not have breaking changes, though bug fixes are always a prospect.

 * These aspects of trustworthy production need to be accounted for.  There
   should also be some integration with respect to confirmable experience.

 * In VCrayApp.bat, have places for error messages to link to that provide
   more information on resolving a particular failure.

 * Resolve use of docs/dev connections back and forth on raylib at docs/tools.

 * Do alpha/beta availability and distribution once there is a docs/dev folder
   for downloading, usage information, and gathering feedback.

 * .vscode/.vscode.txt needs further details including what happens with
   user *.h files in the src/ folder.  Intellisense will work for all of
   the subfolders, that needs to be explained.

 * Provide a checklist for projects built and deployed using VCrayApp.

 * Distinguish local, used-by-developer usage and standalone deployments
   for simple usage and then more-elaborate distribution.

 * Include the procedure for signing the various materials, especially the
   VCrayApp-v.m.n.zip and the text files.

 * Customization instructions must specify some things about what to do with
   signed materials.

*---|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

 0.0.* 2023-03-26T23:19Z Repeatedly backed-up as checklist items completed
 0.0.7 2023-03-26T17:31Z Clone from VCrayApp-checklist.txt
 0.0.6 2023-03-26T17:22Z Touch up for 0.1.0 beta customization
 0.0.5 2023-03-09T20:34Z Additions on CHANGES.txt and checking sigs/hashes
 0.0.4 2023-01-20T17:38Z Update TODOs on use of winget hash
 0.0.3 2023-01-09T23:22Z Update and manage TODOs
 0.0.2 2022-08-16T15:54Z Rename VCrayApp-checklist.txt
 0.0.1 2022-07-17T18:46Z Intermediate check-in
 0.0.0 2022-07-09T16:22Z Initial placeholder cloned from VCrayApp.txt 0.0.4


                 ***** end of VCrayApp-checklist.txt *****
