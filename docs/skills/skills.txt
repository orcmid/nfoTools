skills.txt 0.0.13                   UTF-8                       dh:2022-04-29
----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*


                        nfoWare/nfoWorks nfoTools
                        =========================

   <https://github.com/orcmid/nfoTools/blob/master/docs/skills/skills.txt>
            <https://orcmid.github.io/rayLab/tools/tools.txt>

                        NFOTOOLS SKILLS NOTEBOOK
                       --------------------------

    nfoTools docs/skills/ collection of folios on (tacit) skills that software
    developers rely upon, from reading, keyboarding, and computer operations
    that are part of computational fluency and reliable effort.  It is
    not exactly Computer Programming for Everyone (CP4E), not even Software
    Engineering for Everyone (SE4E), but tacit knowledge underies the
    competence presumed for users and the level of expectation among
    developers and producers of interesting software.

    Unspoken tacit knowledge is a barrier to neophytes and it is something
    that those who posess it don't even pause to notice they did not always
    have it themselves; it must be made visible to be learned.  It takes a
    beginner's mind to expose it.  Being thrown into the deep end of the pool
    as a way to learn to swim is not a great idea, especially for adults.

    The companion docs/tools/ articles rest on presumption or acquisition
    of various skills and awareness of their limitations. Skills are the
    prerequisites/companions for mastery of the tools.

    There are also skills related to cultural and social technologies, such
    as times and dates, calendars and locations, that are tacit and lead to
    intrinsic biases.  Then there is the matter of language and the overall
    encouragement of conceptual models that are embedded, or not,
    in technological efforts.  There may need to be identification of those
    assumptions, especially ones about language, location, and the past,
    present, and future.  These sources of friction need to be identified
    whether addressed or not.

MANIFEST

    skills.txt
        this manifest and job-jar file
    index.md
        Markdown of the entrance page to the skills notebook

    S210901/ Skills Inventory Notes
    S210902/ Keyboards and Keyboarding


 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

                    Copyright 2021-2022 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

 ATTRIBUTION

   Hamilton, Dennis E. nfoTools Skills Notebook.  nfoTools project text file
   skills.txt version 0.0.13 dated 2022-04-29, available on the Internet as a
   version of <https://orcmid.github.io/nfoTools/skills/skills.txt>

TODO

 * Add "related-material" to notes on tacit knowledge and anything on gaining
   skills and confidence under other sections of nfoTools.

 * With regard to pre-requisites, we need to identify what they are and also
   provide a means to mastery of them. There is also something about UX
   guidance.

 * De-emphasize tacit knowledge and focus on skills pre-requisites and their
   satisfaction.  Add "on being a beginner."  Standard beginner mistakes.
   Introduce Confirmable Experience.

 * On Confirmable experience, and on providing mechanisms for encouraging it
   with novices.  Identify ways for beginners to report their difficulties,
   distinguish between requesting assistance and reporting a defect.  Also,
   discussions versus "Issues" and gleaning UX problems out of reported
   issues.

 * The home page should also help with this and maybe "About" too.

 * Address the prerequisite and companion skills that go with becoming fluent
   in the toolcraft featured in the nfoTools project.

 * Drawing and diagramming as a skill.  ASCII Art too.

 * The three R's as skills

 * Details of Windows 10/11 that users need to grasp in order to be able to
   lift the covers on software and programming

 * Need something about trial-and-error and not taking irreversible actions.

 * Need something about how we didn't learn things all at once and there needs
   to be an useful and also-tantalizing journey for a fruitful experience.

 * Need something on fear of failure and fear of ridicule, the ability to
   work in the open and with the scrutiny/contribution of others.

 * Elevate confirmable experience also, particularly in how to gain
   assistance and conduct trouble-shooting.

 * Make a bullet list of skills that are the kind that beginners need to
   be aware of and to cultivate.  Include keyboarding, file explorer usage,
   downloading and installing software, web browsing, screen capture

 * Need to look at English-first vs English-second, also accessibility and
   special access considerations.

 * Also supporting skills in others and learning technology details - when
   is getting into how keyboards work going too far down a rathole?

 * Create a connection to skills and tools from the entrance page.  Also notes
   for some sort-of meta-topics.

 * Add on-ramp rerequisites and summaries/tutorials on file explorer, adding
   Git and GitHub support, downloading and installing software, zip usage,
   editing with Visual Studio Code, installing Visual Studio build tools,
   console operation (cmd.exe), and creating C/C++ software projects.

 * Need a skills inventory page for what I have in mind with regard to what
   becomes tacit more-or-less.  Some of this is about cases that are taken
   farther under tools.

 * Make a project about compiling situations where tacit skills need to be
   exposed and explained to newcomers.  Will feed the skills inventory page.
   That should be a folio.

 * Drawing and also pen-and-ink are also great cases of skills and also
   toolcraft.

 * Is an S000000 needed?

 * I was lying awake around 2021-10-14T13:00Z thinking about dates and
   calendars and the difficulties of dates in the past, and especially times
   in the relatively-recent past influenced by Daylight Savings time,
   something that messes up my older Outlook calendar pages depending on
   whether it is DST now or not, versus then.  Here is one treatment of the
   topic, <https://www.hcidata.info/cgi-bin/calendar.cgi>.  There is a
   problem with running calendars (and times) backwards, before times when
   a particular system went into effect.  This is rather overlooked in
   <https://exceluser.com/1057/how-to-work-with-dates-before-1900-in-excel/>.
   There is a name for running a date system back before the time it was
   introduced (in a given location!).  They are termed proleptic dates.  Here
   is a good article <https://en.wikipedia.org/wiki/Gregorian_calendar> with
   a terrific sidebar on different calendar systems.

 * Although unlikely to matter here, it occured to me that there is a problem
   with time-travel in any direction considering that the positions of the
   Earth and points on the surface of the Earth will have changed.  We then
   get into problems of coordinate systems and the (relative!) motions of
   planets and the solar system itself.  I can understand why this is not
   dealt with in science fiction and dramatizations of time travel.  And of
   course, fixed points on the Earth's surface are not all that fixed given
   significant time intervals.

 * Awareness of location systems and also time systems in astronomical terms
   are also significant as we talk about visiting more places away from the
   Earth's surface.  I wonder how that works for the International Space
   Station, and also on Mars now for rovers and later for human visitors.

 * There are also language skills.  The ESL accomodation matters.  There are
   also things that can be done about that.

 * Gaming is a skill or at least avocation.  I wonder what to do with those.

 * Some of the treatment on beginner mind needs to cross-pollinate with skills

 * Beginner Mind is a skill along with Confirmable Experience Capture.  So
   screen capture and ways to make the captures useful matters.

 * The creation of issue reports versus discussion, questions, and reporting
   are different and it takes skills to know the difference and to provide
   sufficient information and a way to supply more as requested.

 * The idea of confirmable experience is relevant, both in regard to
   explanation and also replication/confirmation of reports.

 * I don't know where all the ways to have text editors, and to create text
   editing, belongs.  In one sense, a note would be good for coverage.  The
   same goes for command-line processors (i.e., shells) and differences
   between cmd.exe, bash, Power shell, etc., and the confusion that Terminal
   introduces.  I need to explain focus on just one while acknowledging that
   there are alternatives.  Then there's notepad and wordpad plus stuff folks
   can get on their own.  This is a marker for all of that. I need to address
   it somehow, probably in more than one place.

 * There is an useful blog post on learning to work on an open-source  project
   that applies here, more with respect to other projects and user-facing
   projects like adv10.  This is definitely a skill-building topic, along with
   using GitHub, IDEs, etc.
   <https://mitchellh.com/writing/contributing-to-complex-projects>.

 * Internet access and search are skills, both for locating developer tools
   and information, but also generally.

 * The care, feeding, and update of PCs, and the treatment of security is
   a skills with assorted tools.

 * Password management, authenticators, multi-factor as intended, and other
   matters can be regarded as skills with regard to safe computing.

 * The preceding gets to TROST and Trust, and how systems are made dependable,
   how breakdowns are handled, etc.

 * We can think of logic, mathematics, and science as skill areas and this
   bears out in endeavors such as the Miser Project.  So the handling of
   logical expressions and equational approaches needs to be considered from
   a skill approach and also with notes on what has it be important and why
   it is powerful to apply it.  There must also be appreciation for empirical
   methods and heuristics, such as the mechanisms around data sets and
   inference systems, including machine learning.  The challenge is to
   account for all this and not deep end, yet provide avenues for interested
   visitors.

 * Reflect some of this in notes, and maybe in Miser better.

 * The notion of refutability arrises in the claims of empirical models of
   computational entities, primitive or emergent, and that aspect makes
   computer science both a science and an engineering discipline.

 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

 0.0.13 2022-04-29T15:58Z More TODOs, considering logic, math, CS, and science
 0.0.12 2022-04-08T16:28Z Manage TODOs, more skills to address
 0.0.11 2022-03-15T14:44Z Manage TODOs, emphasize skills inventory.
 0.0.10 2022-03-08T16:18Z Manage TODOs
 0.0.9 2022-02-28T17:26Z Manage TODOs
 0.0.8 2022-02-14T18:01Z Expand on serving novices
 0.0.7 2021-10-14T15:21Z Musings on dates and times
 0.0.6 2021-09-27T18:38Z Manage TODOs, expand manifest, smoothing
 0.0.5 2021-09-05T16:21Z Moved keyboarding TODOs to S210902.txt
 0.0.4 2021-09-05T15:51Z Touch-up, capture TODOs on keyboards
 0.0.3 2021-09-04T17:35Z Expand and add a corrected S210901 for inventory
 0.0.2 2021-09-02T16:49Z Manage TODOs
 0.0.1 2021-09-01T21:34Z Add index.md and manage TODOs, touch-up the text
 0.0.0 2021-08-31T15:47Z Placeholder for the introduction of skills materials


                     ***** end of skills.txt *****
