T211001.txt 0.0.3                   UTF-8                      dh:2022-12-27
----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*


                        nfoWare/nfoWorks nfoTools
                        =========================

<https://github.com/orcmid/nfoTools/blob/master/docs/tools/T211001/T211001.txt>
      <https://orcmid.github.io/nfoTools/tools/T211001/T211001.txt>

                       T211001: VISUAL STUDIO CODE
                       ---------------------------

    nfoTools docs/tools folio on Visual Studio Code, including the new
    Visual Studio Code on the web.


MANIFEST

    T211001.txt  this manifest and job-jar file

      index.md   front porch published as orcmid.github.io/nfoTools/T21001/

   T211001c/     VS Code Installation

     VSCode-2021-10-20-0950-WebPreview.png
           parking place for VSCode Web material until have a place for it

----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

                Copyright 2021-2022 Dennis E. Hamilton

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

 ATTRIBUTION

   Hamilton, Dennis E. T211001: Visual Studio Code.  nfoTools project text
   file T211001.txt version 0.0.3 dated 2021-12-27, available on the Internet
   as a version of
   <https://orcmid.github.io/nfoTools/tools/T211001/T211001.txt>

TODO

 * Recommend VS Code or editor first, then GitHub for Windows, then
   TortoiseGit and GitHub Desktop, then VIsual Studio Developer Tools or
   Community Edition.  I don't think this is the correct sequence.  I need
   to tie it into spiraling and projects here that always build.  This means
   I can recommend teething exercises that work.  The raylib ones matter as
   is something like building Adv10, although that will depend on the state
   of Adv10 at the time.  I need to fix its build process now (2022-04-27).

 * I am uncertain about the sequence.  VS Code will depend on Visual Studio
   Developer Tools for operation of the C/C++ intellisense.

 * I am also uncertain about Git and GitHub.  I can't determine or don't
   remember how VS Code deals with Git if it is not already installed.

 * Finding the install location of VC and C/C++ Build tools will be
   important.  The use of a developer command prompt is now essential to
   having VS Code to provide intellisense along with resolution of #include
   requirements.  This has to be unravelled.

 * Need to establish how far one can get with Visual Studio Code on the Web.
   I need some development about that.  I think it is very tied to having a
   GitHub project.  I need to see how that aspect works.

 * Treat how Visual Studio Web works with local arrangements.

 * Consider how it works with GitHub projects.

 * Wondering how VS Code Web building, etc., work.

 * Deal with operation as part of Developer Command Prompt

 * Deal with VS 2019 and VS 2017 installation and also detection.  Unclear
   about 2015 and earlier any longer.  There is the need to be able to rebuild
   and test and to patch that may require continued support of those releases.

 * Resolve the CMD Command Prompt situation as follows.  We will speak of the
   command-line ENVIRONMENT that CMD establishes.  Then things like VC/C++
   Tools and the customization of the environment fits in.  Also, the general
   terminal/console model can be spoken of separately, in a combination of
   notes and specific toolcrafts, including developing-for, not just
   developing-in.  Create projects for this.

 * Watch FC_CPP and ensure that supporting materials are appearing here on
   nfoTools/docs.

 * Park VS Code on the Web screen captures here until have a better place for
   them.

 * I am anxious about the level of detail and how this can be in the way of
   those who want to work quickly and get into action.  I must get the
   progressive disclosure to also foster skip-aheads and potential future
   review of details.

 * Placeholder: on Compiler Explorer Execution and Static Analysis Support for
   MSVC.   https://godbolt.org/
   https://devblogs.microsoft.com/cppblog/execution-and-static-analysis-support-for-msvc-on-compiler-explorer/

 * There may be license issues that someone might have to deal with.  It
   appears that the open-source use does require the same license as for the
   community editions.  ALso,
   <https://devblogs.microsoft.com/cppblog/updates-to-visual-studio-build-tools-license-for-c-and-cpp-open-source-projects/>

 * A new link on the Build Tools:
   <https://visualstudio.microsoft.com/visual-cpp-build-tools/>.

 * Useful to point out that VS Code works with WSL and Linux build chains.
   <https://learn.microsoft.com/en-us/windows/wsl/tutorials/wsl-vscode>

----|----1----|----2----|----3----|----4----|----5----|----6----|----7----|--*

 0.0.3 2022-12-27T17:38Z Tidy up.  TODOs need to be reviewed.
 0.0.2 2022-04-27T16:43Z Manage TODOs, muse on Git and GitHub
 0.0.1 2021-10-23T19:00Z Bring current, expand TODOs
 0.0.0 2021-10-18T18:20Z Placeholder made from tools.txt as boiler plate.

                     ***** end of T211001.txt *****
